{"version":3,"sources":["Components/Content/Dashboard/Dashboard2.module.css","Components/Content/Dashboard/Card.module.css","Components/Content/Dashboard/Card.jsx","Components/Content/Dashboard/AddForm.jsx","Components/Content/Dashboard/Column.jsx","Components/Content/Dashboard/Dashboard2.jsx"],"names":["module","exports","Card","text","id","index","deleteCard","columnId","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","className","styles","card","onClick","btnDelete","AddForm","column","addColumn","addCard","columnIndex","React","useState","form","setForm","textForm","setTextFrom","buttonContainer","placeholder","autoFocus","onBlur","value","onChange","e","target","name","cols","buttonRow","onMouseDown","variant","button","Column","title","cards","deleteColumn","droppableId","droppableProps","nameColumn","btnDeleteColumn","map","key","connect","state","columns","dashboard2","sort","onDragEnd","result","destination","source","type","dashboardHome","direction","dashboard"],"mappings":"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","file":"static/js/7.71886455.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardHome\":\"Dashboard2_dashboardHome__3ahwL\",\"dashboard\":\"Dashboard2_dashboard__2_d24\",\"column\":\"Dashboard2_column__jRW3o\",\"nameColumn\":\"Dashboard2_nameColumn__17ASV\",\"btnDeleteColumn\":\"Dashboard2_btnDeleteColumn__2vsPX\",\"btnAddCard\":\"Dashboard2_btnAddCard__3lKQw\",\"sectionAddCard\":\"Dashboard2_sectionAddCard__3Y15D\",\"btnAddCardNow_Row\":\"Dashboard2_btnAddCardNow_Row__sQMup\",\"btnAddCardNow\":\"Dashboard2_btnAddCardNow__3L31U\",\"btnCancelAddCard\":\"Dashboard2_btnCancelAddCard__1-kgY\",\"form\":\"Dashboard2_form__2wDmS\",\"buttonContainer\":\"Dashboard2_buttonContainer__101Tk\",\"buttonRow\":\"Dashboard2_buttonRow__3VYtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3DKC6\",\"btnDelete\":\"Card_btnDelete__c38-x\"};","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst Card = ({text, id, index, deleteCard, columnId}) => {\r\n    return (\r\n        <Draggable draggableId={String(id)} index={index}>\r\n            {provided => (\r\n                <div ref={provided.innerRef}\r\n                     {...provided.draggableProps}\r\n                     {...provided.dragHandleProps}\r\n                >\r\n                    <div className={styles.card}>\r\n                        <div>\r\n                            {text}\r\n                        </div>\r\n                        <div onClick={()=>{deleteCard(columnId, index)}} className={styles.btnDelete}>\r\n                            X\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport styles from \"./Dashboard2.module.css\"\r\n\r\nconst AddForm = ({column, addColumn, addCard, columnIndex}) => {\r\n    const [form, setForm] = React.useState(false);\r\n    const [textForm, setTextFrom] = React.useState(\"\");\r\n    const openForm = () => {\r\n        setForm(true)\r\n    };\r\n    const closeForm = () => {\r\n        setForm(false);\r\n        setTextFrom(\"\")\r\n    };\r\n    const onChangeForm = (e) => {\r\n        setTextFrom(e.target.value)\r\n    };\r\n    const pushButton=()=>{\r\n        column\r\n            ? addColumn(textForm)\r\n            : addCard(columnIndex, textForm)\r\n    };\r\n    return (\r\n        <div className={styles.buttonContainer}>\r\n            <div>\r\n                {form\r\n                    ? <div>\r\n                    <textarea\r\n                        placeholder={column ? \"Enter text of new column\" : \"Enter text of new card\"}\r\n                        autoFocus={true}\r\n                        onBlur={closeForm}\r\n                        value={textForm}\r\n                        onChange={onChangeForm}\r\n                        className={styles.form} name=\"textarea\" id=\"textarea\" cols=\"3\"/>\r\n                    </div>\r\n                    : <div onClick={openForm}>+ {column ? \"Add column\" : \"Add card\"}</div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {form\r\n                    ? <div className={styles.buttonRow}>\r\n                        <button onMouseDown={textForm? pushButton : null} variant=\"contained\" className={styles.button}>\r\n                            {column ? \"Add column\" : \"Add card\"}\r\n                        </button>\r\n                        <div> X </div>\r\n                    </div>\r\n                    : null}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default AddForm;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport styles from \"./Dashboard2.module.css\"\r\nimport AddForm from \"./AddForm\";\r\nimport {Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\n\r\nconst Column = ({title, cards, addColumn, addCard, columnId, columnIndex, deleteColumn, deleteCard, index}) => {\r\n    return (\r\n        <Draggable draggableId={String(columnIndex)} index={index}>\r\n            {provided => (\r\n                <div {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}\r\n                     className={styles.column}>\r\n                    <Droppable droppableId={String(columnId)}>\r\n                        {provided => (\r\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                <div className={styles.nameColumn}>\r\n                                    <h4>{title}</h4>\r\n                                    <span onClick={() => {\r\n                                        deleteColumn(columnId)\r\n                                    }} className={styles.btnDeleteColumn}>X</span>\r\n                                </div>\r\n\r\n                                {cards.map((card, index) => (\r\n                                    <Card deleteCard={deleteCard} columnId={columnId} index={index} id={card.id}\r\n                                          key={card.id} text={card.text}/>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                                <AddForm columnIndex={columnIndex}\r\n                                         addColumn={addColumn}\r\n                                         addCard={addCard}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n\r\n    )\r\n}\r\n\r\nexport default Column;\r\n","import React from \"react\";\r\nimport styles from \"./Dashboard2.module.css\"\r\nimport {connect} from \"react-redux\";\r\nimport Column from \"./Column\";\r\nimport AddForm from \"./AddForm\";\r\nimport {addCard, addColumn, deleteCard, deleteColumn, sort} from \"../../../Redux/dashboard2-reducer\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\n\r\nconst Dashboard2 = ({columns, addColumn, addCard, sort, deleteColumn, deleteCard}) => {\r\n    const onDragEnd=(result)=>{\r\n        const {destination, source, draggableId, type} =result;\r\n        if (!destination){\r\n            return\r\n        }\r\n        sort(\r\n            source.droppableId,\r\n            destination.droppableId,\r\n            source.index,\r\n            destination.index,\r\n            draggableId,\r\n            type\r\n        )\r\n    }\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <div className={styles.dashboardHome}>\r\n                <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                    {provided =>(\r\n                        <div className={styles.dashboard} {...provided.droppableProps} ref={provided.innerRef}>\r\n                            {columns.map((column, index) => (\r\n                                <Column deleteCard={deleteCard} deleteColumn={deleteColumn}\r\n                                        columnId={index} index={index} columnIndex={column.id}\r\n                                        addColumn={addColumn} addCard={addCard} key={column.id}\r\n                                        title={column.title} cards={column.cards}/>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                            <AddForm column addColumn={addColumn}/>\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    columns: state.dashboard2\r\n})\r\n\r\nexport default connect(mapStateToProps, {addColumn, addCard, sort, deleteColumn, deleteCard})(Dashboard2);"],"sourceRoot":""}